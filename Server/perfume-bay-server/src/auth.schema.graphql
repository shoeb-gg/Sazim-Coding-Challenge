type USER {
  id: String
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String
  address: String
}

input CREATE_USER_INPUT {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String
  address: String
}
type CREATE_USER_INPUT_Response {
  id: String
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  address: String
}

input LOGIN {
  email: String!
  password: String!
}

type LOGIN_RESPONSE {
  success: Boolean!
  access_token: String!
}

type GetUser_Response {
  id: String
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  address: String
}

type Query {
  getUser(id: String!): GetUser_Response
  login(credentials: LOGIN): LOGIN_RESPONSE
}

type Mutation {
  createUser(userInfo: CREATE_USER_INPUT!): CREATE_USER_INPUT_Response

  updateUser(
    id: String!
    firstName: String
    lastName: String
    email: String
    password: String
    phone: String
    address: String
  ): USER

  deleteUser(id: String!): Boolean
}
