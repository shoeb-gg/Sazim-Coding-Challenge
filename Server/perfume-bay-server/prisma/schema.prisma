// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model USER {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String
  lastName  String
  email     String     @unique
  password  String
  phone     String?
  address   String?
  products  PRODUCT[]
  PURCHASE  PURCHASE[]
}

model PRODUCT {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String
  categories    String[]
  description   String
  purchasePrice Int
  rentPrice     Int
  rentDuration  String
  purchased     Boolean    @default(false)
  userId        String     @db.Uuid
  USER          USER?      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  PURCHASE      PURCHASE[]
  RENT          RENT[]
}

model PURCHASE {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  purchase_dateTime DateTime @default(now()) @db.Timestamptz(6)
  product_id        String   @db.Uuid
  userId            String   @db.Uuid
  PRODUCT           PRODUCT? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  USER              USER?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model RENT {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rent_createDateTime DateTime @default(now()) @db.Timestamptz(6)
  from                DateTime @db.Timestamptz(6)
  to                  DateTime @db.Timestamptz(6)
  product_id          String   @db.Uuid
  PRODUCT             PRODUCT? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
